/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimplePoolFactory,
  SimplePoolFactoryInterface,
} from "../../contracts/SimplePoolFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolLength",
        type: "uint256",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allPools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allPoolsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611674806100a56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f6578063ccadfd6214610107578063efde4e641461011a578063f2fde38b1461012b57600080fd5b80631698ee821461008257806341d1de97146100d9578063715018a6146100ec575b600080fd5b6100bc61009036600461069b565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bc6100e73660046106de565b61013e565b6100f4610168565b005b6000546001600160a01b03166100bc565b6100bc6101153660046106f7565b61017c565b6002546040519081526020016100d0565b6100f4610139366004610742565b6105a4565b6002818154811061014e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6101706105e2565b61017a600061060f565b565b6000836001600160a01b0316856001600160a01b0316036101da5760405162461bcd60e51b81526020600482015260136024820152724944454e544943414c5f41444452455353455360681b60448201526064015b60405180910390fd5b6001600160a01b038516158015906101fa57506001600160a01b03841615155b6102355760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016101d1565b600080856001600160a01b0316876001600160a01b03161061025857858761025b565b86865b6001600160a01b0380831660009081526001602090815260408083208486168452825280832062ffffff8c16845290915290205492945090925016156102d15760405162461bcd60e51b815260206004820152600b60248201526a504f4f4c5f45584953545360a81b60448201526064016101d1565b6000604051806020016102e39061065f565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b1660348201526001600160e81b031960e889901b166048820152909150600090604b01604051602081830303815290604052805190602001209050808251602084016000f5604051633a4f5a7d60e11b81526001600160a01b038681166004830152858116602483015262ffffff8a166044830152606482018990529196509086169063749eb4fa90608401600060405180830381600087803b1580156103bb57600080fd5b505af11580156103cf573d6000803e3d6000fd5b505050508460016000866001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008962ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508460016000856001600160a01b03166001600160a01b031681526020019081526020016000206000866001600160a01b03166001600160a01b0316815260200190815260200160002060008962ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002859080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055508662ffffff16836001600160a01b0316856001600160a01b03167f6b0bd0d931644137e75247d249fc244cf0391bdde8bce70175de4427f978dd35886002805490506040516105909291906001600160a01b03929092168252602082015260400190565b60405180910390a450505050949350505050565b6105ac6105e2565b6001600160a01b0381166105d657604051631e4fbdf760e01b8152600060048201526024016101d1565b6105df8161060f565b50565b6000546001600160a01b0316331461017a5760405163118cdaa760e01b81523360048201526024016101d1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610eda8061076583390190565b80356001600160a01b038116811461068357600080fd5b919050565b803562ffffff8116811461068357600080fd5b6000806000606084860312156106b057600080fd5b6106b98461066c565b92506106c76020850161066c565b91506106d560408501610688565b90509250925092565b6000602082840312156106f057600080fd5b5035919050565b6000806000806080858703121561070d57600080fd5b6107168561066c565b93506107246020860161066c565b925061073260408601610688565b9396929550929360600135925050565b60006020828403121561075457600080fd5b61075d8261066c565b939250505056fe608060405234801561001057600080fd5b506001600055610eb5806100256000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806387b21efc116100b8578063c89d5b8b1161007c578063c89d5b8b1461028f578063d21220a714610297578063ddca3f43146102aa578063e5bd9fa1146102d4578063ea9ddcfc146102dd578063edbc25e2146102e557600080fd5b806387b21efc1461025a5780639250cdea1461026d5780639d1b464a14610275578063b26025aa1461027e578063bd55022a1461028657600080fd5b8063443cb4bc116100ff578063443cb4bc146101c75780635a76f25e146101d05780635f81a57c146101d95780636d069a67146101e2578063749eb4fa146101f557600080fd5b80630902f1ac1461013c5780630dfe16811461015c578063140b9d841461018757806315770f921461019e5780632c15665f146101a7575b600080fd5b600454600554604080519283526020830191909152015b60405180910390f35b60015461016f906001600160a01b031681565b6040516001600160a01b039091168152602001610153565b61019060075481565b604051908152602001610153565b61019060065481565b6101906101b5366004610cd7565b600c6020526000908152604090205481565b61019060045481565b61019060055481565b610190600a5481565b6101906101f0366004610cf2565b6102ee565b610258610203366004610d2e565b600180546001600160a01b039586166001600160a01b03199091161790556002805462ffffff909316600160a01b026001600160b81b0319909316939094169290921717909155600355426009556000600855565b005b610190610268366004610d83565b6106f3565b600854610190565b61019060035481565b6101906108fe565b610190600b5481565b610190610935565b60025461016f906001600160a01b031681565b6002546102c090600160a01b900462ffffff1681565b60405162ffffff9091168152602001610153565b61019060095481565b600754610190565b61019060085481565b60006102f8610a16565b6000831161034d5760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e540000000000000060448201526064015b60405180910390fd5b6001546001600160a01b038581169116148061037657506002546001600160a01b038581169116145b6103b25760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b6044820152606401610344565b6001600160a01b0382166103f55760405162461bcd60e51b815260206004820152600a602482015269494e56414c49445f544f60b01b6044820152606401610344565b6001546001600160a01b0385811691161480156104f1576002546000906127109061042c90600160a01b900462ffffff1682610dc5565b61043b9062ffffff1687610de8565b6104459190610e05565b9050806004546104559190610e27565b816005546104639190610de8565b61046d9190610e05565b92506005548311156104ba5760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b6044820152606401610344565b84600460008282546104cc9190610e27565b9250508190555082600560008282546104e59190610e3a565b909155506105d1915050565b6002546000906127109061051190600160a01b900462ffffff1682610dc5565b6105209062ffffff1687610de8565b61052a9190610e05565b90508060055461053a9190610e27565b816004546105489190610de8565b6105529190610e05565b925060045483111561059f5760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b6044820152606401610344565b84600560008282546105b19190610e27565b9250508190555082600460008282546105ca9190610e3a565b9091555050505b6105e66001600160a01b038616333087610a40565b61061e838383610601576001546001600160a01b031661060e565b6002546001600160a01b03165b6001600160a01b03169190610aad565b61062784610ae3565b60055460045461063f90670de0b6b3a7640000610de8565b6106499190610e05565b60035580610662576001546001600160a01b031661066f565b6002546001600160a01b03165b6001600160a01b0316856001600160a01b0316336001600160a01b03167f54787c404bb33c88e86f4baf88183a3b0141d0a848e6a9f7a13b66ae3a9b73d18786886040516106d99392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a4506106ec6001600055565b9392505050565b60006106fd610a16565b60008411801561070d5750600083115b61074f5760405162461bcd60e51b8152602060048201526013602482015272125394d551919250d251539517d05353d55395606a1b6044820152606401610344565b600154610767906001600160a01b0316333087610a40565b60025461077f906001600160a01b0316333086610a40565b6006546000036107a25761079b6107968486610de8565b610bc9565b90506107e2565b6107df600454600654866107b69190610de8565b6107c09190610e05565b6005546006546107d09087610de8565b6107da9190610e05565b610c39565b90505b600081116108325760405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e5445440000006044820152606401610344565b83600460008282546108449190610e27565b92505081905550826005600082825461085d9190610e27565b9250508190555080600660008282546108769190610e27565b90915550506001600160a01b0382166000908152600c6020526040812080548392906108a3908490610e27565b909155505060408051858152602081018590529081018290526001600160a01b038316907f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e9060600160405180910390a26106ec6001600055565b6000670de0b6b3a76400006003546005546109199190610de8565b6109239190610e05565b6004546109309190610e27565b905090565b60006006546000036109475750600090565b6002546007546000916127109161096a91600160a01b900462ffffff1690610de8565b6109749190610e05565b90506000306001600160a01b031663b26025aa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190610e4d565b9050806000036109ed5760009250505090565b806109fa8361016d610de8565b610a05906064610de8565b610a0f9190610e05565b9250505090565b600260005403610a3957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6040516001600160a01b038481166024830152838116604483015260648201839052610aa79186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610c4f565b50505050565b6040516001600160a01b03838116602483015260448201839052610ade91859182169063a9059cbb90606401610a75565b505050565b600954610af39062015180610e27565b421115610b82576007805490829055426009558015610b7c57806007541115610b42578081600754610b259190610e3a565b610b30906064610de8565b610b3a9190610e05565b600855610b7c565b8060075482610b519190610e3a565b610b5c906064610de8565b610b669190610e05565b6008819055610b789060001990610de8565b6008555b50610b9a565b8060076000828254610b949190610e27565b90915550505b80600a6000828254610bac9190610e27565b9091555050600b8054906000610bc183610e66565b919050555050565b60006003821115610c2a5750806000610be3600283610e05565b610bee906001610e27565b90505b81811015610c2457905080600281610c098186610e05565b610c139190610e27565b610c1d9190610e05565b9050610bf1565b50919050565b8115610c34575060015b919050565b6000818310610c4857816106ec565b5090919050565b600080602060008451602086016000885af180610c72576040513d6000823e3d81fd5b50506000513d91508115610c8a578060011415610c97565b6001600160a01b0384163b155b15610aa757604051635274afe760e01b81526001600160a01b0385166004820152602401610344565b80356001600160a01b0381168114610c3457600080fd5b600060208284031215610ce957600080fd5b6106ec82610cc0565b600080600060608486031215610d0757600080fd5b610d1084610cc0565b925060208401359150610d2560408501610cc0565b90509250925092565b60008060008060808587031215610d4457600080fd5b610d4d85610cc0565b9350610d5b60208601610cc0565b9250604085013562ffffff81168114610d7357600080fd5b9396929550929360600135925050565b600080600060608486031215610d9857600080fd5b8335925060208401359150610d2560408501610cc0565b634e487b7160e01b600052601160045260246000fd5b62ffffff828116828216039080821115610de157610de1610daf565b5092915050565b8082028115828204841417610dff57610dff610daf565b92915050565b600082610e2257634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610dff57610dff610daf565b81810381811115610dff57610dff610daf565b600060208284031215610e5f57600080fd5b5051919050565b600060018201610e7857610e78610daf565b506001019056fea26469706673582212200b27b80c366df9bc5129e011218e2c550d5a8d7a8fd46414ee65c0f91e05776264736f6c63430008140033a2646970667358221220f176ee6c2893a105913fac0a2cd2f7c0f173c80b37ff021cbdedf96cc27d6c3064736f6c63430008140033";

type SimplePoolFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePoolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePoolFactory__factory extends ContractFactory {
  constructor(...args: SimplePoolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimplePoolFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimplePoolFactory__factory {
    return super.connect(runner) as SimplePoolFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePoolFactoryInterface {
    return new Interface(_abi) as SimplePoolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimplePoolFactory {
    return new Contract(address, _abi, runner) as unknown as SimplePoolFactory;
  }
}
