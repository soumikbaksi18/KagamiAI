/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimplePool,
  SimplePoolInterface,
} from "../../contracts/SimplePool";

const _abi = [
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalValueLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVolume24h",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVolumeChange24h",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "_initialPrice",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastVolumeReset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "volume24h",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "volumeChangePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055610eb5806100256000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806387b21efc116100b8578063c89d5b8b1161007c578063c89d5b8b1461028f578063d21220a714610297578063ddca3f43146102aa578063e5bd9fa1146102d4578063ea9ddcfc146102dd578063edbc25e2146102e557600080fd5b806387b21efc1461025a5780639250cdea1461026d5780639d1b464a14610275578063b26025aa1461027e578063bd55022a1461028657600080fd5b8063443cb4bc116100ff578063443cb4bc146101c75780635a76f25e146101d05780635f81a57c146101d95780636d069a67146101e2578063749eb4fa146101f557600080fd5b80630902f1ac1461013c5780630dfe16811461015c578063140b9d841461018757806315770f921461019e5780632c15665f146101a7575b600080fd5b600454600554604080519283526020830191909152015b60405180910390f35b60015461016f906001600160a01b031681565b6040516001600160a01b039091168152602001610153565b61019060075481565b604051908152602001610153565b61019060065481565b6101906101b5366004610cd7565b600c6020526000908152604090205481565b61019060045481565b61019060055481565b610190600a5481565b6101906101f0366004610cf2565b6102ee565b610258610203366004610d2e565b600180546001600160a01b039586166001600160a01b03199091161790556002805462ffffff909316600160a01b026001600160b81b0319909316939094169290921717909155600355426009556000600855565b005b610190610268366004610d83565b6106f3565b600854610190565b61019060035481565b6101906108fe565b610190600b5481565b610190610935565b60025461016f906001600160a01b031681565b6002546102c090600160a01b900462ffffff1681565b60405162ffffff9091168152602001610153565b61019060095481565b600754610190565b61019060085481565b60006102f8610a16565b6000831161034d5760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e540000000000000060448201526064015b60405180910390fd5b6001546001600160a01b038581169116148061037657506002546001600160a01b038581169116145b6103b25760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b6044820152606401610344565b6001600160a01b0382166103f55760405162461bcd60e51b815260206004820152600a602482015269494e56414c49445f544f60b01b6044820152606401610344565b6001546001600160a01b0385811691161480156104f1576002546000906127109061042c90600160a01b900462ffffff1682610dc5565b61043b9062ffffff1687610de8565b6104459190610e05565b9050806004546104559190610e27565b816005546104639190610de8565b61046d9190610e05565b92506005548311156104ba5760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b6044820152606401610344565b84600460008282546104cc9190610e27565b9250508190555082600560008282546104e59190610e3a565b909155506105d1915050565b6002546000906127109061051190600160a01b900462ffffff1682610dc5565b6105209062ffffff1687610de8565b61052a9190610e05565b90508060055461053a9190610e27565b816004546105489190610de8565b6105529190610e05565b925060045483111561059f5760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b6044820152606401610344565b84600560008282546105b19190610e27565b9250508190555082600460008282546105ca9190610e3a565b9091555050505b6105e66001600160a01b038616333087610a40565b61061e838383610601576001546001600160a01b031661060e565b6002546001600160a01b03165b6001600160a01b03169190610aad565b61062784610ae3565b60055460045461063f90670de0b6b3a7640000610de8565b6106499190610e05565b60035580610662576001546001600160a01b031661066f565b6002546001600160a01b03165b6001600160a01b0316856001600160a01b0316336001600160a01b03167f54787c404bb33c88e86f4baf88183a3b0141d0a848e6a9f7a13b66ae3a9b73d18786886040516106d99392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a4506106ec6001600055565b9392505050565b60006106fd610a16565b60008411801561070d5750600083115b61074f5760405162461bcd60e51b8152602060048201526013602482015272125394d551919250d251539517d05353d55395606a1b6044820152606401610344565b600154610767906001600160a01b0316333087610a40565b60025461077f906001600160a01b0316333086610a40565b6006546000036107a25761079b6107968486610de8565b610bc9565b90506107e2565b6107df600454600654866107b69190610de8565b6107c09190610e05565b6005546006546107d09087610de8565b6107da9190610e05565b610c39565b90505b600081116108325760405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e5445440000006044820152606401610344565b83600460008282546108449190610e27565b92505081905550826005600082825461085d9190610e27565b9250508190555080600660008282546108769190610e27565b90915550506001600160a01b0382166000908152600c6020526040812080548392906108a3908490610e27565b909155505060408051858152602081018590529081018290526001600160a01b038316907f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e9060600160405180910390a26106ec6001600055565b6000670de0b6b3a76400006003546005546109199190610de8565b6109239190610e05565b6004546109309190610e27565b905090565b60006006546000036109475750600090565b6002546007546000916127109161096a91600160a01b900462ffffff1690610de8565b6109749190610e05565b90506000306001600160a01b031663b26025aa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190610e4d565b9050806000036109ed5760009250505090565b806109fa8361016d610de8565b610a05906064610de8565b610a0f9190610e05565b9250505090565b600260005403610a3957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6040516001600160a01b038481166024830152838116604483015260648201839052610aa79186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610c4f565b50505050565b6040516001600160a01b03838116602483015260448201839052610ade91859182169063a9059cbb90606401610a75565b505050565b600954610af39062015180610e27565b421115610b82576007805490829055426009558015610b7c57806007541115610b42578081600754610b259190610e3a565b610b30906064610de8565b610b3a9190610e05565b600855610b7c565b8060075482610b519190610e3a565b610b5c906064610de8565b610b669190610e05565b6008819055610b789060001990610de8565b6008555b50610b9a565b8060076000828254610b949190610e27565b90915550505b80600a6000828254610bac9190610e27565b9091555050600b8054906000610bc183610e66565b919050555050565b60006003821115610c2a5750806000610be3600283610e05565b610bee906001610e27565b90505b81811015610c2457905080600281610c098186610e05565b610c139190610e27565b610c1d9190610e05565b9050610bf1565b50919050565b8115610c34575060015b919050565b6000818310610c4857816106ec565b5090919050565b600080602060008451602086016000885af180610c72576040513d6000823e3d81fd5b50506000513d91508115610c8a578060011415610c97565b6001600160a01b0384163b155b15610aa757604051635274afe760e01b81526001600160a01b0385166004820152602401610344565b80356001600160a01b0381168114610c3457600080fd5b600060208284031215610ce957600080fd5b6106ec82610cc0565b600080600060608486031215610d0757600080fd5b610d1084610cc0565b925060208401359150610d2560408501610cc0565b90509250925092565b60008060008060808587031215610d4457600080fd5b610d4d85610cc0565b9350610d5b60208601610cc0565b9250604085013562ffffff81168114610d7357600080fd5b9396929550929360600135925050565b600080600060608486031215610d9857600080fd5b8335925060208401359150610d2560408501610cc0565b634e487b7160e01b600052601160045260246000fd5b62ffffff828116828216039080821115610de157610de1610daf565b5092915050565b8082028115828204841417610dff57610dff610daf565b92915050565b600082610e2257634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610dff57610dff610daf565b81810381811115610dff57610dff610daf565b600060208284031215610e5f57600080fd5b5051919050565b600060018201610e7857610e78610daf565b506001019056fea26469706673582212200b27b80c366df9bc5129e011218e2c550d5a8d7a8fd46414ee65c0f91e05776264736f6c63430008140033";

type SimplePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePool__factory extends ContractFactory {
  constructor(...args: SimplePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimplePool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimplePool__factory {
    return super.connect(runner) as SimplePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePoolInterface {
    return new Interface(_abi) as SimplePoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimplePool {
    return new Contract(address, _abi, runner) as unknown as SimplePool;
  }
}
