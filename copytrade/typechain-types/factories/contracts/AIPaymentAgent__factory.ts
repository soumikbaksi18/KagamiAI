/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AIPaymentAgent,
  AIPaymentAgentInterface,
} from "../../contracts/AIPaymentAgent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentFacilitator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_copyRelay",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "action",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reasoning",
        type: "string",
      },
    ],
    name: "AIDecision",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "PerformanceFeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RefundTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubscriptionRenewalProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "followerCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalPnL",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isProfitable",
        type: "bool",
      },
    ],
    name: "TradeAnalyzed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
    ],
    name: "analyzeMarketConditions",
    outputs: [
      {
        internalType: "bool",
        name: "shouldPause",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "analyzeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
    ],
    name: "assessRiskAndRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "consecutiveLosses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "copyRelay",
    outputs: [
      {
        internalType: "contract CopyRelay",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "generateTradingSummary",
    outputs: [
      {
        internalType: "string",
        name: "summary",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
    ],
    name: "getConsecutiveLosses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "getTradeAnalysis",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tradeId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "leader",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "followers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "totalVolume",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "totalPnL",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "isProfitable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct AIPaymentAgent.TradeAnalysis",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRefundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTradeId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentFacilitator",
    outputs: [
      {
        internalType: "contract X402PaymentFacilitator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performanceFeeThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processSubscriptionRenewals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "refundTriggers",
    outputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lossAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consecutiveLosses",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isProcessed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tradeAnalyses",
    outputs: [
      {
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "totalPnL",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "isProfitable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRefundThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMinRefundAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPerformanceFeeThreshold",
        type: "uint256",
      },
    ],
    name: "updateAIThresholds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AIPaymentAgentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIPaymentAgentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIPaymentAgent__factory extends ContractFactory {
  constructor(...args: AIPaymentAgentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _paymentFacilitator: AddressLike,
    _copyRelay: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _paymentFacilitator,
      _copyRelay,
      overrides || {}
    );
  }
  override deploy(
    _paymentFacilitator: AddressLike,
    _copyRelay: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _paymentFacilitator,
      _copyRelay,
      overrides || {}
    ) as Promise<
      AIPaymentAgent & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AIPaymentAgent__factory {
    return super.connect(runner) as AIPaymentAgent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIPaymentAgentInterface {
    return new Interface(_abi) as AIPaymentAgentInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AIPaymentAgent {
    return new Contract(address, _abi, runner) as unknown as AIPaymentAgent;
  }
}
